events {
    worker_connections 1024;
}

http {
    upstream rpg_envoy {
        server rpg-envoy:8080;
    }

    upstream rpg_web {
        server rpg-web:80;
    }

    upstream discord_auth {
        server rpg-discord-auth:8080;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;

    # HTTP server - redirects to HTTPS except for ACME challenges
    server {
        listen 80;
        server_name ${DOMAIN_NAME};

        # ACME challenge location for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other HTTP requests to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name ${DOMAIN_NAME};

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
        
        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # SSL session caching
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Security headers (X-Frame-Options is set per location for Discord compatibility)
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        # Discord auth routes
        location /api/discord/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://discord_auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for Discord Activity
            add_header X-Frame-Options DENY always;
        }

        # gRPC-Web API routes (via Envoy proxy)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Remove /api prefix and forward to Envoy proxy
            rewrite ^/api/(.*)$ /$1 break;
            
            proxy_pass http://rpg_envoy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Required for gRPC-Web
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Restrictive headers for API routes
            add_header X-Frame-Options DENY always;
        }

        # React app (default route)
        location / {
            limit_req zone=web burst=50 nodelay;
            
            proxy_pass http://rpg_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Override security headers for Discord Activity embedding
            add_header X-Frame-Options "";
            add_header Content-Security-Policy "frame-ancestors https://discord.com https://discordapp.com https://ptb.discord.com https://ptb.discordapp.com https://canary.discord.com https://canary.discordapp.com https://staging.discord.co http://localhost:* https://localhost:* http://127.0.0.1:* https://127.0.0.1:*";
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;

            # Handle SPA routing
            try_files $uri $uri/ @fallback;
        }

        # SPA fallback for client-side routing
        location @fallback {
            proxy_pass http://rpg_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Discord Activity embedding headers
            add_header X-Frame-Options "";
            add_header Content-Security-Policy "frame-ancestors https://discord.com https://discordapp.com https://ptb.discord.com https://ptb.discordapp.com https://canary.discord.com https://canary.discordapp.com https://staging.discord.co http://localhost:* https://localhost:* http://127.0.0.1:* https://127.0.0.1:*";
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}