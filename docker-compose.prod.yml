version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: rpg-redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - rpg-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  rpg-api:
    image: ghcr.io/${GITHUB_REPOSITORY}/rpg-api:latest
    container_name: rpg-api
    restart: unless-stopped
    expose:
      - "50051"
    environment:
      - PORT=50051
      - LOG_LEVEL=info
      - ENV=production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - rpg-network
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "nc -z localhost 50051 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  envoy:
    image: envoyproxy/envoy:v1.31-latest
    container_name: rpg-envoy
    restart: unless-stopped
    expose:
      - "8080"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
    depends_on:
      - rpg-api
    networks:
      - rpg-network
    command: /usr/local/bin/envoy -c /etc/envoy/envoy.yaml -l info

  rpg-web:
    image: ghcr.io/${GITHUB_REPOSITORY}/rpg-web:latest
    container_name: rpg-web
    restart: unless-stopped
    expose:
      - "80"
    depends_on:
      - rpg-api
      - envoy
    networks:
      - rpg-network

  nginx:
    image: nginx:alpine
    container_name: rpg-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - rpg-api
      - rpg-web
      - envoy
    networks:
      - rpg-network

networks:
  rpg-network:
    driver: bridge

volumes:
  redis_data:
  certs: